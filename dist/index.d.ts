import { StringAnimation } from "./Animations/StringAnimation";
import { StringAnimationData } from "./Animations/StringAnimationData";
import { StringLerpAnimation } from "./Animations/StringLerpAnimation";
import { StringParallaxAnimation } from "./Animations/StringParallaxAnimation";
import { StringProgressAnimation } from "./Animations/StringProgressAnimation";
import { StringShowAnimation } from "./Animations/StringShowAnimation";
import { StringScrollbar } from "./Scrollbar/StringScrollbar";
import { StringTracker } from "./Tracker/StringTracker";
import { StringScrollData } from "./StringScrollData";
declare class StringScroll {
    private static i;
    private wH;
    private wW;
    private onScrollEvents;
    private onScrollLerpEvents;
    private sf;
    private cf;
    private f;
    private overflowCurrent;
    private wheelBindFunc;
    private scrollBindFunc;
    private animations;
    private sEn;
    private sEnDesktop;
    private sEnMobile;
    private sEnDisable;
    private eventManager;
    private scrollbar;
    private animationGlobalCycle;
    private animationCycle;
    get safariFactor(): number;
    set safariFactor(value: number);
    get chromiumFactor(): number;
    set chromiumFactor(value: number);
    private _enabled;
    get enabled(): boolean;
    set enabled(value: boolean);
    private mode;
    get scrollMode(): "smooth" | "disable" | "default";
    set scrollMode(scrollMode: "smooth" | "disable" | "default");
    private mMode;
    get mobileScrollMode(): "disable" | "default";
    set mobileScrollMode(mobileMode: "disable" | "default");
    private dMode;
    get desktopScrollMode(): "smooth" | "disable" | "default";
    set desktopScrollMode(desktopMode: "smooth" | "disable" | "default");
    private updateModeParams;
    private sA;
    get speedAccelerate(): number;
    set speedAccelerate(speed: number);
    private sD;
    get speedDecelerate(): number;
    set speedDecelerate(speed: number);
    get scrollPosition(): number;
    set scrollPosition(scrollPosition: number);
    private isUp;
    private oC;
    private constructor();
    static getInstance(): StringScroll;
    scrollTo(scroll: number): void;
    on(key: "scroll" | "progress" | "intersection" | "lerp", event: any, id?: string): void;
    off(key: "scroll" | "progress" | "intersection" | "lerp", event: any, id?: string): void;
    use(objectClass: typeof StringAnimation | typeof StringTracker | typeof StringScrollbar): void;
    start(): void;
    forceUpdateParallax(): void;
    setObjectStatus(id: string, status: boolean): void;
    private getObject;
    private onWheel;
    private onMutationObserver;
    private onScroll;
    private onAnimationFrame;
    onResize(): void;
}
export { StringScroll as StringScroll, StringScroll as default, StringAnimation, StringAnimationData, StringLerpAnimation, StringParallaxAnimation, StringProgressAnimation, StringShowAnimation, StringScrollbar, StringTracker, StringScrollData, };
