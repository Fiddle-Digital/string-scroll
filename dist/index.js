var d=null;var w=null;function parseOffset(offset,elementHeight){offset=offset.trim();if(offset.endsWith("px")){return parseFloat(offset)}else if(offset.endsWith("%")){return parseFloat(offset)*elementHeight/100}else{throw new Error(`Unknown format offset: ${offset}`)}}function getCoords(e){var br=gbcl(d.body),er=gbcl(e),o=er.top-br.top;return{top:o}}function lerp(s,e,a){return(1-a)*s+a*e}function damp(x,y,lambda,dt){return lerp(x,y,1-Math.exp(-lambda*dt))}function gbcl(e){return e.getBoundingClientRect()}class StringScroll{constructor(){this.respState="";this.stickyObj=new Array;this.globalObj=new Array;this.progressObj=new Array;this.onScrollEvents=new Array;this.stEvent=new Map;this.glEvent=new Map;this.prEvent=new Map;this.f=1;this.s=.05;this.t=0;this.c=0;this.d=0;this.requestId=null;this.bottomScroll=0;this.isProg=false;this.isProgTimeout=null;d=document;w=window;this.wHeight=w.innerHeight;this.globalEls=d.querySelectorAll("[data-scroll-global-progress]");this.progressEls=d.querySelectorAll("[data-scroll-progress]");this.stickyEls=d.querySelectorAll("[data-scroll-sticky-progress]");this.lerpEls=d.querySelectorAll("[data-lerp]");this.aGlobalEs=[];w.addEventListener("resize",(()=>{this.onResize()}));w.addEventListener("wheel",this.onWheel.bind(this),{passive:false});w.addEventListener("scroll",this.onScroll.bind(this),{passive:false});this.onAnimationFrame();this.onIntersectionObserver();this.onResize()}static getInstance(){if(!StringScroll.instance){StringScroll.instance=new StringScroll}return StringScroll.instance}setSpeed(speed){this.s=speed}setScrollFactor(factor){this.f=factor}on(key,event){switch(key){case"scroll":this.onScrollEvents.push(event);break;default:break}}onWheel(e){e.preventDefault();this.d=e.deltaY*this.f;this.t+=this.d;if(this.t<0){this.t=0}if(this.t>this.bottomScroll){this.t=this.bottomScroll}}onScroll(e){e.preventDefault();if(this.respState=="d"&&this.isProg==false){this.c=d.documentElement.scrollTop;this.t=d.documentElement.scrollTop;this.d=0}this.recalculate();this.onScrollEvents.forEach((scrollEvent=>{scrollEvent(d.documentElement.scrollTop)}))}onIntersectionObserver(){let options={root:null,rootMargin:"0px",threshold:.01};let callback=entries=>{entries.forEach((entry=>{if(entry.isIntersecting){entry.target.classList.add("-inview");if(!this.aGlobalEs.includes(entry.target)){this.aGlobalEs.push(entry.target);this.sendElements()}}else{if(entry.target.getAttribute("data-scroll-repeat")!=null){entry.target.classList.remove("-inview")}let index=this.aGlobalEs.indexOf(entry.target);if(index!==-1){this.aGlobalEs.splice(index,1);this.sendElements()}}}))};let ob=new IntersectionObserver(callback,options);this.globalEls.forEach((target=>{ob.observe(target)}))}onAnimationFrame(){let reqAnim=()=>{if(this.respState=="d"){let newC=damp(this.c,this.t,this.s,1);let lerp=newC-this.c;this.c=newC;if(Math.abs(this.c-this.t)<1){this.c=this.t}if(lerp!=0){this.isProg=true;d.documentElement.scrollTop=d.body.scrollTop=this.c;if(this.isProgTimeout!=null){clearTimeout(this.isProgTimeout)}this.isProgTimeout=setTimeout((()=>{this.isProg=false}),100);lerp=Math.abs(lerp);this.lerpEls.forEach(((elemet,index)=>{this.lerpEls[index].style.setProperty("--scroll-lerp",lerp)}))}}this.recalculate();requestAnimationFrame(reqAnim)};requestAnimationFrame(reqAnim)}recalculate(){this.stickyObj.forEach((el=>{let prntH=gbcl(el.parent).height;let p=(this.c+this.wHeight*this.c/prntH)/prntH;el.el.style.setProperty("--scroll-sticky-progress",p);this.eStic(el.id,p)}));this.globalObj.forEach((el=>{let p=(this.c+this.wHeight-el.top)/this.wHeight;el.el.style.setProperty("--scroll-global-progress",p);this.eGlob(el.id,p)}));this.progressObj.forEach((el=>{let v=(this.c-el.oBottom+this.wHeight-el.top)/(this.wHeight-el.oTop-el.oBottom);if(v>1){v=1}if(v<0){v=0}el.el.style.setProperty("--scroll-progress",v);this.eProg(el.id,el)}))}addStickyEvent(id,event){this.stEvent.set(id,event)}eStic(id,progress){if(this.stEvent.has(id)){this.stEvent.get(id)(progress)}}addGlobalEvent(id,event){this.glEvent.set(id,event)}eGlob(id,progress){if(this.glEvent.has(id)){this.glEvent.get(id)(progress)}}addProgressEvent(id,event){this.prEvent.set(id,event)}eProg(id,progress){if(this.prEvent.has(id)){this.prEvent.get(id)(progress)}}sendElements(){this.stickyObj=Array.from(this.stickyEls).map((el=>({el:el,top:el.getAttribute("data-offset-top"),height:el.getAttribute("data-offset-height"),id:el.getAttribute("data-scroll-id"),parent:el.parentNode})));this.globalObj=Array.from(this.aGlobalEs).map((el=>({el:el,top:el.getAttribute("data-offset-top"),height:el.getAttribute("data-offset-height")})));this.progressObj=Array.from(this.progressEls).map((el=>{var r=gbcl(el);var oA=el.getAttribute("data-scroll-offset");var o=oA?oA.split(",").map((o=>parseOffset(o,this.wHeight))):[0,0];return{el:el,top:getCoords(el).top,height:r.height,oTop:o[0],oBottom:o[1]}}))}initEl(el){var r=gbcl(el);el.style.setProperty("--scroll-progress",0);el.style.setProperty("--scroll-global-progress",0);el.setAttribute("data-offset-top",getCoords(el).top);el.setAttribute("data-offset-height",r.height)}onResize(){this.stickyEls.forEach((el=>{this.initEl(el)}));this.globalEls.forEach((el=>{this.initEl(el)}));this.sendElements();let b=d.body,h=d.documentElement;let dHeight=Math.max(b.scrollHeight,b.offsetHeight,h.clientHeight,h.scrollHeight,h.offsetHeight);this.wHeight=w.innerHeight;this.bottomScroll=dHeight-this.wHeight;if(w.innerWidth>1024&&this.respState!="d"){this.respState="d"}if(w.innerWidth<=1024&&this.respState!="m"){this.respState="m"}}}export default StringScroll;